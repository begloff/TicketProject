services:
  db:
    image: mysql:latest
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 10s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    container_name: express_api
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_DIALECT: ${DB_DIALECT}
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy

  react-app:
    build:
      context: ./src/web
      dockerfile: Dockerfile
    container_name: react_app
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy

  migrations:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    command: ["npx", "sequelize-cli", "db:migrate"]
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      db:
        condition: service_healthy

volumes:
  mysql_data:
